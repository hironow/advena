# Deploy to Google Cloud Run
# see: https://github.com/astral-sh/uv-docker-example/blob/main/multistage.Dockerfile

# First, build the application in the `/app` directory.
FROM ghcr.io/astral-sh/uv:python3.13-bookworm-slim AS builder
ENV UV_COMPILE_BYTECODE=1 UV_LINK_MODE=copy
WORKDIR /app

# Install build dependencies
RUN apt-get update && apt-get install -y build-essential git
# Using uv to install dependencies
RUN --mount=type=cache,target=/root/.cache/uv \
    --mount=type=bind,source=uv.lock,target=uv.lock \
    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
    uv sync --frozen --no-install-project --no-dev
ADD . /app
# dotenvx other env file to avoid conflicts
RUN rm -f /app/.env.dev
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --frozen --no-dev

# Then, use a final image without uv
FROM python:3.13-slim-bookworm
# It is important to use the image that matches the builder, as the path to the
# Python executable must be the same, e.g., using `python:3.11-slim-bookworm`
# will fail.

WORKDIR /app

# Install dotenvx
RUN apt-get update && apt-get install -y curl
RUN curl -sfS https://dotenvx.sh > install.sh \
    && chmod +x install.sh \
    && ./install.sh --directory=. \
    && rm install.sh

# Copy the application from the builder
COPY --from=builder --chown=app:app /app /app

# Place executables in the environment at the front of the path
ENV PATH="/app/.venv/bin:$PATH"

# see: https://dotenvx.com/docs/platforms/docker
CMD ["./dotenvx", "run", "-f .env.production", "--", "uvicorn", "src.main:app", "--host", "0.0.0.0", "--port", "8080"]
