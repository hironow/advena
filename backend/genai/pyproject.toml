[project]
name = "genai"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "cloudevents>=1.11.0",
    "fastapi>=0.115.6",
    "google-auth>=2.38.0",
    "google-cloud-aiplatform>=1.76.0",
    "google-cloud-firestore>=2.20.0",
    "google-cloud-storage>=2.19.0",
    "google-generativeai>=0.8.3",
    "livekit-agents>=0.12.10",
    "livekit-plugins-google>=0.10.1",
    "livekit-plugins-nltk>=0.7.3",
    "livekit-plugins-openai>=0.10.16",
    "livekit-plugins-rag>=0.2.3",
    "livekit-plugins-turn-detector>=0.3.6",
    "lmnr[all]>=0.4.55",
    "pydantic>=2.10.5",
    "smolagents>=1.5.0",
    "tenacity>=9.0.0",
    "weave>=0.51.31",
]

[dependency-groups]
dev = [
    "pytest>=8.3.4",
    "pytest-asyncio>=0.25.2",
    "ruff>=0.9.1",
    "tokencost>=0.1.17",
]


[tool.ruff]
exclude = ["dist", ".venv"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
    "W191", # indentation contains tabs
]

[tool.ruff.lint.isort]
known-third-party = []

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.pytest]
norecursedirs = [".venv", "src/swarm/examples/*"]

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"  # "class", "module", "package", "session"
